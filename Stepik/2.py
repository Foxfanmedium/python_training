#=======================================================================================================================
#Паша очень любит кататься на общественном транспорте, а получая билет, сразу проверяет, счастливый ли ему попался.
#Билет считается счастливым, если сумма первых трех цифр совпадает с суммой последних трех цифр номера билета.
#Однако Паша очень плохо считает в уме, поэтому попросил вас написать программу, которая проверит равенство сумм и
#выведет "Счастливый", если суммы совпадают, и "Обычный", если суммы различны.
#На вход программе подаётся строка из шести цифр.
#Выводить нужно только слово "Счастливый" или "Обычный", с большой буквы.

#n = str(input())
#sum1 = int(n[0]) + int(n[1]) + int(n[2])
#sum2 = int(n[3]) + int(n[4]) + int(n[5])
#if sum1 == sum2:
#print("Счастливый")
#else:
#print("Обычный")

#num = int(input())
#if (num//1000)%1000//100 + (num//1000)%100//10 + (num//1000)%10 ==\
#(num%1000)%1000//100 + (num%1000)%100//10 + (num%1000)%10:
#        print('Счастливый')
#else:
#        print('Обычный')

#a, b, c, d, e, f = input()
#n= int(a)+int (b)+int(c)
#m= int(d)+int (e)+int(f)
#if n==m:
#print ('Счастливый')
#else:
#print ('Обычный')
#=======================================================================================================================


#n = int(input())
#a=1
#while a <= n:
#  print('*' * a)
#  a += 1

#n = int(input())
#stars = '*'
#while len(stars)<=n:
#  print(stars)
#  stars += '*'

#a = int(input())
#s = 0
#while a != 0:
#  s = s + a
#  a = int(input())
#print(s)

#a = int(input())
#b = int(input())
#d = 1
#while d % a != 0 or  d % b != 0:
#    d += 1
#else:
#    print(d)

#i = 0
#while i < 5
#a, b = input().split()
#a = Int(a)
#b = int(b)
#print(a*b)
#i+=1

#i = 0
#while i < 5
#a, b = input().split()
#a = Int(a)
#b = int(b)
#if (a == 0) and (b == 0):
#break # досрочное завершение
#print(a*b)
#i+=1

#i = 0
#while i < 5
#a, b = input().split()
#a = Int(a)
#b = int(b)
#if (a == 0) and (b == 0):
#break # досрочное завершение
#if (a == 0) or (b == 0):
#continue # переход к следующей итерации
#print(a*b)
#i+=1
#=======================================================================================================================

#В институте биоинформатики по офису передвигается робот. Недавно студенты из группы программистов написали для него
#программу, по которой робот, когда заходит в комнату, считает количество программистов в ней и произносит его
#вслух: "n программистов".
#Для того, чтобы это звучало правильно, для каждого nn нужно использовать верное окончание слова.
#Напишите программу, считывающую с пользовательского ввода целое число nn (неотрицательное), выводящее это число в
#консоль вместе с правильным образом изменённым словом "программист", для того, чтобы робот мог нормально общаться
#с людьми, например: 1 программист, 2 программиста, 5 программистов.
#В комнате может быть очень много программистов. Проверьте, что ваша программа правильно обработает все случаи, как
#минимум до 1000 человек.
#Дополнительный комментарий к условию:
#Обратите внимание, что задача не так проста, как кажется на первый взгляд. Если ваше решение не проходит какой-то тест,
#это значит, что вы не рассмотрели какой-то из случаев входных данных (число программистов 0≤n≤10000≤n≤1000).
#Обязательно проверяйте свои решения на дополнительных значениях, а не только на тех, что приведены в условии задания.
#Так как задание повышенной сложности, вручную код решений проверяться не будет. Если вы столкнулись с ошибкой в первых
#четырёх тестах, проверьте, что вы используете только русские символы для ответа. В остальных случаях ищите ошибку в
#логике работы программы.

#n = int (input ())
#if n % 10 == 1 and n % 100 != 11:
#    print (str(n) + " программист")
#elif n % 10 == 2 and n % 100 != 12 or n % 10 == 3 and n % 100 != 13 or n % 10 == 4 and n % 100 != 14:
#    print (str(n) + " программиста")
#else:
#    print (str(n) + " программистов")

#=======================================================================================================================
#Напишите программу, которая считывает целые числа с консоли по одному числу в строке.
#Для каждого введённого числа проверить:
#если число меньше 10, то пропускаем это число;
#если число больше 100, то прекращаем считывать числа;
#в остальных случаях вывести это число обратно на консоль в отдельной строке.
#i = 0
#while True:
    #  i = int(input())
    #  if i > 100:
    #break
    #if i < 10:
    #continue
#print(i)

#a = 0
#while a<=100:
    #  a = int (input())
    #if a > 100:
    #break
    #if a<10:
    #continue
#print(a)

#=======================================================================================================================
#Когда Павел учился в школе, он запоминал таблицу умножения прямоугольными блоками.
#Для тренировок ему бы очень пригодилась программа, которая показывала бы блок таблицы умножения.
#Напишите программу, на вход которой даются четыре числа aa, bb, cc и dd, каждое в своей строке.
#Программа должна вывести фрагмент таблицы умножения для всех чисел отрезка [a;b][a;b] на все числа отрезка [c;d][c;d].
#Числа aa, bb, cc и dd являются натуральными и не превосходят 10, a≤ba≤b, c≤dc≤d.
#Следуйте формату вывода из примера, для разделения элементов внутри строки используйте '\t' — символ табуляции.
#Заметьте, что левым столбцом и верхней строкой выводятся сами числа из заданных отрезков — заголовочные столбец и
# строка таблицы.
#a = int(input())
#b = int(input())
#c = int(input())
#d = int(input())
#for g in range(c, d+1):
#    print('\t'+str(g), end='')
#print(end='\n')
#for i in range(a, b+1):
  #    print(str(i)+'\t', end='')
  #    for j in range(c, d+1):
  #     print(str(i*j), end='\t')
# print(end='\n')
#=======================================================================================================================
#a = int(input())
#b = int(input())
#c = int(input())
#d = int(input())
#for g in range(c, d+1):
#    print('\t' + str(g), end="")
#print(end="\n")
#for i in range(a, b+1):
#    print(str(i) + '\t', end=" ")
#    for j in range(c, d+1):
#        print(i*j, end='\t')
#    print(end="\n")
#=======================================================================================================================
#a, b = input().split()
#a = int(a)
#b = int(b)
#s = 0
#for i in range(a, b+1):
#    if i%2==1:
#        s+=i
#print(s)
#=======================================================================================================================
#a, b = input().split()
#a = int(a)
#b = int(b)
#s = 0
#if a % 2 == 0:
#    a+=1
#for i in range (a, b+1, 2):
#    s+=i
#print(s)
#=======================================================================================================================

#a, b = (int(i) for i in input().split())
#s = 0
#if a % 2 == 0:
#    a+=1
#for i in range(a, b+1, 2):
#    s+=i
#print(s)
#=======================================================================================================================
# Напишите программу, которая считывает с клавиатуры два числа aa и bb, считает и выводит на консоль среднее
# арифметическое всех чисел из отрезка [a;b][a;b], которые делятся на 33.
#В приведенном ниже примере среднее арифметическое считается для чисел на отрезке [−5;12][−5;12]. Всего чисел,
#делящихся на 33, на этом отрезке 66: −3,0,3,6,9,12−3,0,3,6,9,12. Их среднее арифметическое равно 4.54.5
#На вход программе подаются интервалы, внутри которых всегда есть хотя бы одно число, которое делится на 33.

#a = int(input())
#b = int(input())
#s = 0
#c = 0
#for j in range (a,b+1):
#    if j%3 == 0:
#        s = s+j
#        c = c+1
#    j+=1
#    if j ==0:
#        j += 3
#print(s/c)
#=======================================================================================================================
# genome = 'ATGG'
#genome[0] A  genome[-1] G
#genome[1] T  genome[-2] G
#genome[2] G  genome[-3] T
#genome[3] G  genome[-4] A
#--------------------------
# genome = 'ATGG'
#for i in range(4):
#    print(genome[i])
#--------------------------
# genome = 'ATGG'
#for c in genome:
#    print(c)
#--------------------------
# Посчитать сколько раз буква С встречается в АССТРС

#genome = input()
#cnt = 0
#for nucl in genome:
#    if nucl =='C':
#        cnt+=1
#print(cnt)
#----------------------------------------------------
#genome = input()
#if genome == genome [::-1]:
#    print ("YES")
#else:
#    print("NO")
#=======================================================================================================================

# Узнав, что ДНК не является случайной строкой, только что поступившие в Институт биоинформатики студенты группы
# информатиков предложили использовать алгоритм сжатия, который сжимает повторяющиеся символы в строке.
#Кодирование осуществляется следующим образом:
#s = 'aaaabbсaa' преобразуется в 'a4b2с1a2', то есть группы одинаковых символов исходной строки заменяются на этот
#символ и количество его повторений в этой позиции строки.
#Напишите программу, которая считывает строку, кодирует её предложенным алгоритмом и выводит закодированную
#последовательность на стандартный вывод. Кодирование должно учитывать регистр символов.

#s = input()
#i = 0
#count = 1
#out = ''
#while i+1< len(s):
#    if s[i] == s[i+1]:
#        count += 1
#    else:
#        out = out + s[i] + str(count)
#        count = 1
#    i +=1
#print(out+ s[i] + str(count))
#-----------------------------------------------------------------------------------------------------------------------
#s = input() + 's'
#i = 0
#c = 1
#while i < len(s)-1:
#    if s[i] == s[i+1]:
#        i += 1
#        c += 1
#    else:
#        print(s[i] + str(c), end='')
#        i += 1
#        c = 1

#=======================================================================================================================

#GC-состав является важной характеристикой геномных последовательностей и определяется
#как процентное соотношение суммы всех гуанинов и цитозинов к общему числу нуклеиновых
#оснований в геномной последовательности.

#Напишите программу, которая вычисляет процентное содержание символов G (гуанин) и C (цитозин)
#лжна зависеть от регистра вводимых символов).

#Например, в строке "acggtgttat" процентное содержание символов G и C
#равно 410⋅100=40.0410⋅100=40.0, где 4 -- это количество символов G и C,  а 10 -- это длина строки.

#s = input(str())
#a = s.upper().count('C'.upper())
#b = s.upper().count('G'.upper())
#print( (a + b) / len(s) * 100)

#-----------------------------------------------------------------------------------------------------------------------

#s = input(str())
#print( (s.upper().count('C'.upper()) + s.upper().count('G'.upper())) / len(s) * 100)

#=======================================================================================================================

#students = ['Ivan','Masha','Sasha']
#students += ['Olga']
#students += 'Olga'
#print(students)
#-----------------------------------------------------------------------------------------------------------------------

#students = ['Ivan', 'Masha', 'Olga']
#students.remove('Olga') удаляется первый элемент с таким значением из списка
#print(students)

#del students[0]
#print(students)
#-----------------------------------------------------------------------------------------------------------------------
#students = ['Ivan', 'Masha', 'Olga']
#if 'Ivan' in students:
#    print('Ivan is here')
#if "Olga" not in students:
#    print('Olga is out')
#else:
#    print('Your next question?')
#-----------------------------------------------------------------------------------------------------------------------
#students = ['Ivan', 'Masha', 'Olga', 'Misha', 'Grisha', 'Sasha']
#ind= students.index('Olga')
#print(ind)
#-----------------------------------------------------------------------------------------------------------------------
#students = ['Ivan', 'Masha', 'Olga', 'Misha', 'Grisha', 'Sasha']
#ordered_students = sorted(students)
#print(sorted(students))
#print(ordered_students)

#students = ['Ivan', 'Masha', 'Olga', 'Misha', 'Grisha', 'Sasha']
#students.sort()
#print(students)

#students = ['Ivan', 'Masha', 'Olga', 'Misha', 'Grisha', 'Sasha']
#students.min()
#max(students)
#print(students)

#-----------------------------------------------------------------------------------------------------------------------
#students = ['Ivan', 'Masha', 'Olga', 'Misha', 'Grisha', 'Sasha']
#students.reverse()  Methode
#new = reversed(students)  #Function
#print(reversed(students))
#print(students[::-1])  выведение  вобратном порядке без использования методов и функций
#-----------------------------------------------------------------------------------------------------------------------
#Имеется программа, код которой указан ниже.
#Укажите, какие значения будут содержать списки в помеченных участках:
#a = [1, 2, 3]
#b = a
# значения списка b?
#a[1] = 10
# значения списка b?
#b[0] = 20
# значения списка a?
#a = [5, 6]
# значения списка b?
#Запишите значения списков в одну строку, разделяя списки точкой с запятой, а элементы внутри списка — пробелом,
#например:

#1 1 1; 2 2 2; 3 3 3; 4 4 4

#Ответ:
#1 2 3; 1 10 3; 20 10 3; 20 10 3

#-----------------------------------------------------------------------------------------------------------------------
#Генерация списков:
#a = [0]*5  составить список из 5 нулей
#a = [0 for i in range(5)]  составить список из 5-и нулей
#a = [i*i for i in range(5)]   квадрат для чисел от 0 до 4
#a = [int(i) for i in input.split()]
#-----------------------------------------------------------------------------------------------------------------------
#Напишите программу, на вход которой подается одна строка с целыми числами. Программа должна вывести сумму этих чисел.
#Используйте метод split строки.

#s = input().split()
#sum = 0
#for i in range (len(s)):
#    sum+= int(s[i])
#print(sum)
#-----------------------------------------------------------------------------------------------------------------------
#Напишите программу, на вход которой подаётся список чисел одной строкой. Программа должна для каждого элемента этого
#списка вывести сумму двух его соседей. Для элементов списка, являющихся крайними, одним из соседей считается элемент,
#находящий на противоположном конце этого списка. Например, если на вход подаётся список "1 3 5 6 10", то на выход
#ожидается список "13 6 9 15 7" (без кавычек).
#Если на вход пришло только одно число, надо вывести его же.
#Вывод должен содержать одну строку с числами нового списка, разделёнными пробелом.

inp = list(map(int, input().split()))
out = []
i = 0
for i in range(len(inp) - 1):
    out.append(inp[i - 1] + inp[i + 1])
else:
    out.append(inp[i] + inp[0])
print(out, end='')
#print(*out)

#-----------------------------------------------------------------------------------------------------------------------
#Напишите программу, которая принимает на вход список чисел в одной строке и выводит на экран в одну строку значения,
#которые повторяются в нём более одного раза.
#Для решения задачи может пригодиться метод sort списка.
#Выводимые числа не должны повторяться, порядок их вывода может быть произвольным.

#list_numbers = list(map(int,input().split()))
#result = [i for i in set(list_numbers) if list_numbers.count(i) > 1]
#print(*(result))
#-----------------------------------------------------------------------------------------------------------------------
# dimetrial lists

a = [[1,2,3],[4,5,6],[7,8,9]]
a[1]
[4,5,6]

a[1][1]
5























